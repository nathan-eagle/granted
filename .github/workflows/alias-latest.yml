name: Alias latest Vercel deploy

on:
  push:
    branches: [ main ]

jobs:
  alias-latest:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ALIAS_DOMAIN: ${{ secrets.VERCEL_ALIAS_DOMAIN }}
    steps:
      - name: Wait for latest Vercel deployment to be READY
        run: |
          set -e
          BASE=https://api.vercel.com
          for i in $(seq 1 60); do
            LIST=$(curl -fsS "$BASE/v6/deployments?projectId=$VERCEL_PROJECT_ID&teamId=$VERCEL_TEAM_ID&limit=1" -H "Authorization: Bearer $VERCEL_TOKEN")
            ID=$(echo "$LIST" | jq -r '.deployments[0].uid // .deployments[0].id')
            STATE=$(echo "$LIST" | jq -r '.deployments[0].state // .deployState // .readyState')
            URL=$(echo "$LIST" | jq -r '.deployments[0].url')
            echo "Latest id=$ID state=$STATE url=$URL"
            if [ "$STATE" = "READY" ]; then
              echo "DEPLOY_ID=$ID" >> $GITHUB_ENV
              break
            fi
            sleep 10
          done
          if [ -z "$DEPLOY_ID" ]; then echo "No READY deployment found"; exit 1; fi
      - name: Attach alias to latest READY deployment
        run: |
          set -e
          BASE=https://api.vercel.com
          curl -fsS -X POST "$BASE/v13/deployments/$DEPLOY_ID/aliases?teamId=$VERCEL_TEAM_ID" \
            -H "Authorization: Bearer $VERCEL_TOKEN" -H "Content-Type: application/json" \
            -d '{"alias":"'"$VERCEL_ALIAS_DOMAIN"'"}' | jq -r '.'
      - name: Verify alias mapping
        run: |
          BASE=https://api.vercel.com
          curl -fsS "$BASE/v2/aliases/$VERCEL_ALIAS_DOMAIN?teamId=$VERCEL_TEAM_ID" -H "Authorization: Bearer $VERCEL_TOKEN" | jq -r '{alias, deploymentId}'

