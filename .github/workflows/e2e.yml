name: E2E

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
      OPENAI_MODE: mock
      ENABLE_DEV_LOGIN: "1"
      DEV_LOGIN_PASSWORD: e2e-pass
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Run migrations
        working-directory: web
        run: |
          npx prisma migrate deploy || npx prisma db push

      - name: Build
        working-directory: web
        run: npm run build

      - name: Run Playwright tests
        id: run-playwright
        continue-on-error: true
        working-directory: web
        run: |
          npx playwright install --with-deps
          npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: web/playwright-report

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: web/test-results

      - name: Fail if Playwright failed
        if: always()
        run: |
          if [ "${{ steps.run-playwright.outcome }}" != "success" ]; then
            echo "Playwright tests failed"
            exit 1
          fi
